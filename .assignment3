#makeCacheMatrix is a function that returns a list of functions. It stores a matrix and the cached value of the inversed matrix.
#setMatrix  - sets the value of the matrix
#getMatrix - get the value of a matrix
#cacheInverse - get the cached value
#getInverse - get the cached value

makeCacheMatrix <- function (x = numeric()) {
  cache <- NULL
  setMatrix <- function(newValue) {
      x <<- newValue
      cache <- NULL
  }
  getMatrix <- function() {
      x
  }
  cacheInverse <- function(solve) {
      cache <<- solve
  }
  getInverse <- function() {
      cache
  }
  list( setMatrix = setMatrix, getMatrix = getMatrix, cacheInverse = cacheInverse, getInverse = getInverse)
}

#The following function calculates the inverse of a special matrix created with makeCacheMatrix

cacheSolve <- function(y, ...) {
  #gets the cached value
  inverse <- y$getInverse()
  if(!is.null(inverse)) {
    message("getting cached data")
    return(inverse)
  }
  data <- y$getMartix()
  inverse <- solve(data)
  y$cacheInverse(inverse)
  inverse
}
